binary_build_commands: make install
build_root:
  image_stream_tag:
    name: release
    namespace: openshift
    tag: golang-1.18
images:
- dockerfile_literal: |
    FROM registry.ci.openshift.org/ocp/builder:rhel-8-golang-1.18-openshift-4.12
    WORKDIR /root
    RUN yum install -y yum-utils && \
        yum-config-manager --add-repo https://rpm.releases.hashicorp.com/RHEL/hashicorp.repo && \
        yum -y install terraform python3 make git jq && \
        git config --global http.sslVerify false &&\
        git clone https://github.com/terraform-redhat/terraform-provider-ocm.git --branch main
    ENV GO111MODULE=on
    ENV GOFLAGS=""
    RUN go install github.com/onsi/ginkgo/v2/ginkgo@latest && \
        go install github.com/golang/mock/mockgen@v1.6.0 && \
        go install github.com/openshift-online/ocm-cli/cmd/ocm@latest && \
        go env GOPATH

    RUN mkdir /.cache && chmod 775 -R /.cache ${GOPATH} && \
        python3 -m pip install PyYAML jinja2


    #ENTRYPOINT ["python3", "scripts/run_make_e2e_test.py"]
  to: ocm-tf-cli
releases:
  initial:
    integration:
      name: "4.13"
      namespace: ocp
  latest:
    integration:
      include_built_images: true
      name: "4.13"
      namespace: ocp
resources:
  '*':
    limits:
      memory: 4Gi
    requests:
      cpu: 100m
      memory: 200Mi
tests:
- as: unit
  commands: |-
    go install -mod=mod github.com/onsi/ginkgo/v2/ginkgo@latest
    unset GOFLAGS
    make unit-test
  container:
    from: src
- as: rehearse-e2e-debug
  cron: '@yearly'
  steps:
    cluster_profile: aws-qe
    workflow: terraform-aws-e2e
- as: rehearse-single-debug
  cron: '@yearly'
  steps:
    cluster_profile: aws-qe
    workflow: terraform-aws-single
zz_generated_metadata:
  branch: main
  org: terraform-redhat
  repo: terraform-provider-ocm
